{"version":3,"file":"SketchPad.stories-c22d2574.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/utils/draw.ts","../../src/components/SketchPad.utils.ts","../../src/components/SketchPad.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export const drawPath = (ctx: CanvasRenderingContext2D, path: number[][], color = \"black\") => {\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 2;\n  ctx.lineJoin = \"round\";\n  ctx.lineCap = \"round\";\n  ctx.beginPath();\n  const [x, y] = path[0];\n  ctx.moveTo(x, y);\n  for (let i = 1; i < path.length; i++) {\n    const [x, y] = path[i];\n    ctx.lineTo(x, y);\n  }\n  ctx.stroke();\n};\n\nexport const drawPaths = (ctx: CanvasRenderingContext2D, paths: number[][][], color = \"black\") => {\n  if (paths && paths.length) {\n    for (let i = 0; i < paths.length; i++) {\n      drawPath(ctx, paths[i], color);\n    }\n  }\n};\n","export const getPosition = (\n  evt: React.MouseEvent<HTMLCanvasElement, MouseEvent> | React.TouchEvent<HTMLCanvasElement>,\n  canvasRef: HTMLCanvasElement\n): [number, number] => {\n  if (evt.type === \"mousedown\" || evt.type === \"mousemove\") {\n    const { clientX, clientY } = evt as React.MouseEvent<HTMLCanvasElement, MouseEvent>;\n    const x = Math.round(clientX);\n    const y = Math.round(clientY);\n    return [x, y];\n  } else if (evt instanceof TouchEvent) {\n    evt.preventDefault();\n    const loc = evt.touches[0];\n    const rect = canvasRef?.getBoundingClientRect();\n    if (rect) {\n      const x = Math.round(loc.clientX);\n      const y = Math.round(loc.clientY - rect.top);\n      return [x, y];\n    }\n  }\n  throw new Error(\"Unsupported event provided\");\n};\n\nexport const downloadPng = (canvas: HTMLCanvasElement) => {\n  if (document && canvas) {\n    canvas.toBlob(async (blob) => {\n      if (blob) {\n        const content = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.style.display = \"none\";\n        anchor.download = \"sketch.png\";\n        anchor.href = content;\n        document.body.appendChild(anchor);\n        anchor.click();\n        window.URL.revokeObjectURL(content);\n        document.body.removeChild(anchor);\n      }\n    });\n  }\n};\n\nexport const downloadJson = (paths: number[][][]) => {\n  const data = JSON.stringify(paths);\n  const content = `data:text/plan;charset=utf-8,${encodeURIComponent(data)}`;\n  const anchor = document.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.download = \"paths.json\";\n  anchor.href = content;\n  document.body.appendChild(anchor);\n  anchor.click();\n  window.URL.revokeObjectURL(content);\n  document.body.removeChild(anchor);\n};\n","import { FC, TouchEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport { drawPaths } from \"../utils/draw\";\nimport { downloadJson, downloadPng, getPosition } from \"./SketchPad.utils\";\n\nexport interface SketchPadProps {\n  size?: number;\n  styles?: React.HTMLAttributes<HTMLCanvasElement>[\"style\"];\n  scale?: [number, number];\n  showUndo?: boolean;\n  showExportToPng?: boolean;\n  showExportJson?: boolean;\n}\n\nconst defaults = {\n  size: 400,\n  styles: { backgroundColor: \"white\", boxShadow: \"0px 0px 10px 2px black\" },\n  scale: [1, 1],\n};\n\nexport const SketchPad: FC<SketchPadProps> = (props) => {\n  const { size, styles, scale, showUndo, showExportToPng, showExportJson } = {\n    ...props,\n    ...defaults,\n  };\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [paths, setPaths] = useState<number[][][]>([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [undoDisabled, setUndoDisabled] = useState(true);\n\n  const getContext = useCallback(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) throw new Error(\"No context found\");\n    return ctx;\n  }, [canvasRef]);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const ctx = getContext();\n      ctx.scale(scale[0], scale[1]);\n    }\n  }, [getContext, scale]);\n\n  const draw = () => {\n    const ctx = getContext();\n    ctx.clearRect(0, 0, size, size);\n    if (paths.length > 0) {\n      setUndoDisabled(false);\n    } else {\n      setUndoDisabled(true);\n    }\n    drawPaths(ctx, paths);\n  };\n\n  const handleStartPath = (position: [number, number]) => {\n    setPaths((existingPaths) => [...existingPaths, [position]]);\n    setIsDrawing(true);\n  };\n\n  const handleDrawPath = (position: [number, number]) => {\n    const lastPathIdx = paths.length - 1;\n    setPaths((currentPaths) => {\n      const lastPath = currentPaths[lastPathIdx];\n      lastPath.push(position);\n      currentPaths[lastPathIdx] = lastPath;\n      return currentPaths;\n    });\n    draw();\n  };\n\n  const handleMouseDown = (evt: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    const position = getPosition(evt, canvasRef.current!);\n    handleStartPath(position);\n  };\n\n  const handleTouchStart = (evt: TouchEvent<HTMLCanvasElement>) => {\n    const position = getPosition(evt, canvasRef.current!);\n    handleStartPath(position);\n  };\n\n  const handleMouseMove = (evt: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    if (isDrawing) {\n      const position = getPosition(evt, canvasRef.current!);\n      handleDrawPath(position);\n    }\n  };\n\n  const handleTouchMove = (evt: TouchEvent<HTMLCanvasElement>) => {\n    if (isDrawing) {\n      const position = getPosition(evt, canvasRef.current!);\n      handleDrawPath(position);\n    }\n  };\n\n  const handleDrawEnd = () => {\n    setIsDrawing(false);\n  };\n\n  const handleUndo = () => {\n    setPaths((currentPaths) => {\n      currentPaths.pop();\n      return currentPaths;\n    });\n    draw();\n  };\n\n  return (\n    <div id=\"sketch-pad-wrapper\">\n      <canvas\n        height={size}\n        width={size}\n        style={styles}\n        ref={canvasRef}\n        onMouseDown={(evt) => handleMouseDown(evt)}\n        onTouchStart={(evt) => handleTouchStart(evt)}\n        onMouseMove={(evt) => handleMouseMove(evt)}\n        onTouchMove={(evt) => handleTouchMove(evt)}\n        onMouseUp={() => handleDrawEnd()}\n        onTouchEnd={() => handleDrawEnd()}\n      />\n      <div id=\"sketch-pad-controls\">\n        {showUndo && (\n          <button onClick={handleUndo} disabled={undoDisabled}>\n            Undo\n          </button>\n        )}\n        {showExportToPng && (\n          <button disabled={undoDisabled} onClick={() => downloadPng(canvasRef.current!)}>\n            Download PNG\n          </button>\n        )}\n        {showExportJson && (\n          <button disabled={undoDisabled} onClick={() => downloadJson(paths)}>\n            Download Paths\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","drawPath","ctx","path","color","x","y","i","drawPaths","paths","getPosition","evt","canvasRef","clientX","clientY","loc","rect","downloadPng","canvas","blob","content","anchor","downloadJson","data","defaults","SketchPad","props","size","styles","scale","showUndo","showExportToPng","showExportJson","useRef","setPaths","useState","isDrawing","setIsDrawing","undoDisabled","setUndoDisabled","getContext","useCallback","_a","useEffect","draw","handleStartPath","position","existingPaths","handleDrawPath","lastPathIdx","currentPaths","lastPath","handleMouseDown","handleTouchStart","handleMouseMove","handleTouchMove","handleDrawEnd","handleUndo","jsxs","jsx"],"mappings":"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","x_google_ignoreList":[0,1]}